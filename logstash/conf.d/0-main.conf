input {
  beats {
    host => "logstash"
    port => 5044
  }
}


filter {

  metrics {
    meter => ["events"]
    add_tag => ["logstash_events", "metric"]
  }

  if "syslog" in [tags] or [host] in ["openbsd1","openbsd2"] {
    grok {
      patterns_dir => ["/usr/local/etc/logstash/patterns"]
      match => { "message" => "%{FREEBSDSYSLOG}" }
      remove_field => [ "message" ]
      add_field => [ "received_at", "%{@timestamp}" ]
    }
    if !("_grokparsefailure" in [tags]) {
      mutate { rename => { "syslog_message" => "message" } }
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", 
        "ISO8601" ] }
  }
}

output {
  if "metric" in [tags] {
    if "logstash_events" in [tags] {
      riemann {
        host => "riemann"
        sender => "logstash"
        riemann_event => {
          "service" => "logstash.events"
          "metric" => "%{[events][rate_1m]}"
          "state" => "ok" } }
    }
  } else {
    elasticsearch { 
      hosts => [ "elastic:9200" ]
      user => "elasticuser"
      password => "password"
    }
  }

  if "_grokparsefailure" in [tags] {
    stdout { codec => rubydebug } 
  }
}

# vi:ft=logstash:
