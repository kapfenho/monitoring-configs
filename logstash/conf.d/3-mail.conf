filter {

  if [host] == "mailhost" and [syslog_program] == "smtpd" and !("metric" in [tags]) {

    if [message] =~ "^[a-f0-9]+ mda event=delivery .*result=Ok stat=Delivered" {
      # 
      # ------  inbound email
      #
      grok {
        match => { "message" => "%{WORD} mda event=delivery .*from=<%{DATA:email_from}> to=<%{DATA:email_to}> .*result=Ok stat=Delivered" }
        add_tag => ["mail_inbound", "smtpd"] }
      metrics {
        meter => ["smtpd_mail_inbound"]
        add_tag => ["smtpd_mail_inbound", "metric"] }

    } else if [message] =~ "^[a-f0-9]+ mta event=delivery (?!.*relay=127.0.0.1).*result=Ok" {
      #
      # ------  outbound email
      #
      grok {
        match => { "message" => "%{WORD} mta event=delivery .*from=<%{DATA:email_from}> to=<%{DATA:email_to}> (?!.*relay=127.0.0.1).*result=Ok" }
        add_tag => ["mail_outbound", "smtpd"] }
      metrics {
        meter => ["smtpd_mail_outbond"]
        add_tag => ["smtpd_mail_outbound", "metric"] }

    } else if [message] =~ "^[a-f0-9]+ smtp " {
      #
      # ------  connects
      #
      grok {
        match => { "message" => "%{WORD:smtpd_sessionid} smtp event=%{NOTSPACE:smtpd_event} %{DATA:message}" }
        overwrite => [ "message" ]
        }
      if [smtpd_event] == "connected" {

        grok {
          match => { "message" => "address=%{NOTSPACE:smtpd_conn_address} host=%{NOTSPACE:smtpd_conn_host}" } }

        aggregate {
          task_id => "%{smtpd_sessionid}"
          map_action => "create"
          code => "map['smtpd_conn_address'] = event.get('smtpd_conn_address')
                   map['smtpd_conn_host'] = event.get('smtpd_conn_host')" }

      } else if [smtpd_event] == "failed-command" {

        aggregate {
          task_id => "%{smtpd_sessionid}"
          map_action => "update"
          add_tag => ["failed_smtp_login"]
          code => "event.set('smtpd_conn_address', map['smtpd_conn_address'])
                   event.set('smtpd_conn_host',    map['smtpd_conn_host'])"
          end_of_task => true
          timeout => 600 }

        metrics {
          meter => ["smtpd_login_failed"]
          add_tag => ["smtpd_login_failed", "metric"] }

      }
    }
  }
}

output {
  if "metric" in [tags] {
    if "smtpd_mail_inbound" in [tags] {
      riemann {
        host => "riemann"
        sender => "logstash"
        riemann_event => {
          "service" => "smtpd.mail.inbound"
          "metric" => "%{[smtpd_mail_inbound][count]}"
          "state" => "ok" } }
    }
    if "smtpd_mail_outbound" in [tags] {
      riemann {
        host => "riemann"
        sender => "logstash"
        riemann_event => {
          "service" => "smtpd.mail.outbound"
          "metric" => "%{[smtpd_mail_outbound][count]}"
          "state" => "ok" } }
    }
    if "smtpd_login_failed" in [tags] {
      riemann {
        host => "riemann"
        sender => "logstash"
        riemann_event => {
          "service" => "smtpd.login.failed"
          "metric" => "%{[smtpd_login_failed][count]}"
          "state" => "ok" } }
    }
  }
}

# vi:ft=logstash:
